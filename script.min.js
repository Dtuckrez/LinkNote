function getCursorPosition(e){let t=0;const n=window.getSelection();if(n.rangeCount>0){const o=n.getRangeAt(0),i=o.cloneRange();i.selectNodeContents(e),i.setEnd(o.endContainer,o.endOffset),t=i.toString().length}return t}function getColorByIndex(e){const t=["#f8d7da","#d4edda","#d1ecf1","#fff3cd","#fefefe"];return t[e%t.length]}function removeNoteFromMenu(e){const t=document.querySelector(`.note-item[data-note-id="${e}"]`);t&&t.remove()}function addNoteToMenu(e){const t=document.getElementById("side-menu");if(document.querySelector(`.note-item[data-note-id="${e.id}"]`))return void console.log(`Note with ID: ${e.id} already exists in the side menu.`);console.log(`Adding note with ID: ${e.id} to the side menu.`);const n=document.createElement("div");n.className="note-item",n.dataset.noteId=e.id,n.textContent=e.title||"Untitled",n.addEventListener("click",()=>{console.log(`Restoring note with ID: ${e.id} from the side menu.`),showNote(e.id)}),t.appendChild(n)}function updateNoteInMenu(e){const t=document.querySelector(`.note-item[data-note-id="${e.id}"]`);t&&(t.textContent=e.title||"Untitled")}function showNote(e){const t=notes.find(t=>t.id===e);t&&(t.isVisible=!0,renderNotes(),console.log(`Note with ID ${e} is now visible.`))}function makeNoteDraggable(e,t){let n=!1,o=0,i=0;const d=e.querySelector(".drag-handle");d.addEventListener("mousedown",t=>{n=!0,o=t.clientX-e.getBoundingClientRect().left,i=t.clientY-e.getBoundingClientRect().top,e.style.zIndex=1e3}),document.addEventListener("mousemove",d=>{if(!n)return;const l=document.getElementById("note-container").getBoundingClientRect(),s=d.clientX-l.left,c=d.clientY-l.top;e.style.left=`${s-o}px`,e.style.top=`${c-i}px`,t.position.x=s-o,t.position.y=c-i}),document.addEventListener("mouseup",()=>{n=!1,e.style.zIndex=""})}function makeNoteDraggable(e,t){const n=e.querySelector(".drag-handle");if(!n)return void console.error("Drag handle not found for note:",t.id);let o=!1,i=0,d=0;n.addEventListener("mousedown",t=>{o=!0,i=t.clientX-e.getBoundingClientRect().left,d=t.clientY-e.getBoundingClientRect().top,e.style.zIndex=1e3}),document.addEventListener("mousemove",n=>{if(!o)return;const l=document.getElementById("note-container").getBoundingClientRect(),s=n.clientX-l.left,c=n.clientY-l.top;e.style.left=`${s-i}px`,e.style.top=`${c-d}px`,t.position.x=s-i,t.position.y=c-d}),document.addEventListener("mouseup",()=>{o=!1,e.style.zIndex=""})}function handleSlashInput(e,t){console.log(`handleSlashInput: ${t}`);const n=e.textContent,o=getCursorPosition(e),i=n.slice(0,o).split(/\s+/),d=i[i.length-1];d.startsWith("/")&&d.length>1?(console.log(`Slash detected: "${d}". Showing dropdown...`),console.log("📌 handleSlashInput Note Object:",t),showDropdown(e,t,d)):removeDropdown()}function showDropdown(e,t,n){removeDropdown(),console.log(`Showing dropdown for search term: "${n}" in note ID: ${t.id}`);const o=document.createElement("div");o.className="dropdown",o.style.position="absolute",o.style.zIndex="1000";const i=notes.filter(e=>e.id!==t.id&&e.title.toLowerCase().includes(n.substring(1).toLowerCase()));if(0===i.length)return void console.log("No matching notes found.");i.forEach(i=>{const d=document.createElement("div");d.className="dropdown-option",d.textContent=i.title||"Untitled",d.addEventListener("click",()=>{console.log(`Selected note: ${i.title} (ID: ${i.id})`),t.links.set(i.title,i.id),console.log("📌 showDropdown Note Object:",t),insertNoteTitleAtSlash(e,i,n,t),removeDropdown()}),o.appendChild(d)});const d=window.getSelection(),l=d.getRangeAt(0),s=l.getBoundingClientRect();o.style.left=`${s.left}px`,o.style.top=`${s.bottom+window.scrollY}px`,document.body.appendChild(o),document.addEventListener("click",removeDropdown,{once:!0})}function removeDropdown(){const e=document.querySelector(".dropdown");e&&e.remove()}function insertNoteTitleAtSlash(e,t,n,o){console.log(`🛠 Inserting linked note as plain text: "${t.title}"`);const i=window.getSelection(),d=(i.getRangeAt(0),`*${t.title}*`),l=Array.from(e.childNodes);for(let t of l)if(t.nodeType===Node.TEXT_NODE&&t.textContent.includes(n)){const o=t.textContent,i=o.indexOf(n),l=o.substring(0,i),s=o.substring(i+n.length),c=document.createTextNode(l),r=document.createTextNode(d),a=document.createTextNode(s||" ");e.replaceChild(a,t),e.insertBefore(r,a),e.insertBefore(c,r),restoreCursorPosition(e,r);break}o.content=e.innerHTML,console.log(`✅ Updated note content: "${o.content}"`)}function processTextWithLinks(e,t){console.log("📝 Processing text for link replacement...");const n=/\/(\w+)/g;return e.replace(n,(e,n)=>{if(t.links.has(`/${n}`)){const o=t.links.get(`/${n}`);return console.log(`🔗 Found match: "${e}" -> Replacing with linked span`),`<span class="linked-note" data-linked-id="${o}">*${n}*</span>`}return e})}function getCursorPosition(e){let t=0;const n=window.getSelection();if(n.rangeCount>0){const o=n.getRangeAt(0),i=o.cloneRange();i.selectNodeContents(e),i.setEnd(o.endContainer,o.endOffset),t=i.toString().length}return t}function restoreCursorPosition(e){const t=window.getSelection(),n=document.createRange();e.lastChild?n.setStartAfter(e.lastChild):n.setStart(e,0),n.collapse(!0),t.removeAllRanges(),t.addRange(n)}document.getElementById("note-container").addEventListener("click",e=>{if(e.target.closest(".note"))return;const t=document.getElementById("note-container").getBoundingClientRect();createNote(e.clientX-t.left,e.clientY-t.top)}),document.getElementById("log-notes-button").addEventListener("click",()=>{console.log("Current Notes:",notes)});